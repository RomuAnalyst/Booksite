row_spec(0, angle = 45, bold = TRUE, color = spec_color(1:11, end = 0.9, option = "A", direction = -1))
View(star2)
library(dplyr)
library(kableExtra)
data("starwars")
star2 <- starwars %>% head()
star2 %>%
kable("latex", booktabs = T)%>%
kable_styling(latex_options = "striped")
head(star2) %>%
kable("latex", booktabs = TRUE) %>%
kable_styling(latex_options = "scale_down") %>%
column_spec(1, bold = TRUE) %>%
column_spec(11, color = "red") %>%
row_spec(1, bold = T, color = "white", background = "black", italic = TRUE) %>%
row_spec(0, angle = 45, bold = TRUE, color = spec_color(1:11, end = 0.9, option = "A", direction = -1))
library(dplyr)
library(kableExtra)
data("starwars")
star2 <- starwars %>% head()
star2 %>%
kable("latex", booktabs = T)%>%
kable_styling(latex_options = "striped")
head(star2) %>%
kable("latex", booktabs = TRUE) %>%
kable_styling(latex_options = "scale_down") %>%
column_spec(1, bold = TRUE) %>%
column_spec(11, color = "red") %>%
row_spec(1, bold = T, color = "white", background = "black", italic = TRUE) %>%
row_spec(0, angle = 45, bold = TRUE, color = spec_color(1:11, end = 0.9, option = "A", direction = -1))
library(dplyr)
library(kableExtra)
data("starwars")
star2 <- starwars %>% head()
star2 %>%
kable("latex", booktabs = T)%>%
kable_styling(latex_options = "striped")
head(star2) %>%
kable("latex", booktabs = TRUE) %>%
kable_styling(latex_options = "scale_down") %>%
column_spec(1, bold = TRUE) %>%
column_spec(11, color = "red") %>%
row_spec(1, bold = T, color = "white", background = "black", italic = TRUE) %>%
row_spec(0, angle = 45, bold = TRUE, color = spec_color(1:11, end = 0.9, option = "A", direction = -1))
head(iris) %>%
kable(format = "latex")
head(iris) %>% kable(format = "latex")
library(magrittr)
head(iris) %>% kable(format = "latex")
library(tidyverse)
library(paletteer)
library(gt)
pizzaplace %>%
mutate(type = case_when(
type == "chicken" ~ "chicken (pizzas with chicken as a major ingredient)",
type == "classic" ~ "classic (classical pizzas)",
type == "supreme" ~ "supreme (pizzas that try a little harder)",
type == "veggie" ~ "veggie (pizzas without any meats whatsoever)",
)) %>%
mutate(size = factor(size, levels = c("S", "M", "L", "XL", "XXL"))) %>%
dplyr::group_by(type, size) %>%
dplyr::summarize(
sold = n(),
income = sum(price)
) %>%
gt(rowname_col = "size") %>%
tab_header(title = md("&#127829; Pizzas Sold in 2015 &#127829;")) %>%
fmt_number(
columns = vars(sold),
decimals = 0,
use_seps = TRUE
) %>%
fmt_currency(
columns = vars(income),
currency = "USD"
) %>%
cols_align(align = "right", columns = TRUE) %>%
data_color(
columns = vars(sold, income),
colors = scales::col_numeric(
palette = paletteer::paletteer_d(
palette = "ggsci::red_material"
) %>% as.character(),
domain = NULL
),
alpha = 0.8
) %>%
summary_rows(
groups = TRUE,
columns = vars(sold),
fns = list(TOTAL = "sum"),
formatter = fmt_number,
decimals = 0,
use_seps = TRUE
) %>%
summary_rows(
groups = TRUE,
columns = vars(income),
fns = list(TOTAL = "sum"),
formatter = fmt_currency,
currency = "USD"
) %>%
grand_summary_rows(
columns = vars(sold),
fns = list(`GRAND TOTAL` = "sum"),
formatter = fmt_number,
decimals = 0,
use_seps = TRUE
) %>%
grand_summary_rows(
columns = vars(income),
fns = list(`GRAND TOTAL` = "sum"),
formatter = fmt_currency,
currency = "USD"
) %>%
tab_footnote(
footnote = "The pizza category with the highest total sales.",
locations = cells_row_groups("classic (classical pizzas)")
) %>%
tab_footnote(
footnote = md("Custom sizes for **The Greek** pizza."),
locations = cells_stub(c("XL", "XXL"))
) %>%
tab_footnote(
footnote = md("This is a new record. Truly, 2015 was a **great** year for the `pizzaplace`."),
locations = cells_grand_summary(columns = vars(sold))
) %>%
tab_options(
summary_row.background.color = "#ACEACE80",
grand_summary_row.background.color = "#990000",
row_group.background.color = "#FFEFDB80",
heading.background.color = "#EFFBFC",
column_labels.background.color = "#EFFBFC",
stub.background.color = "#EFFBFC",
table.font.color = "#323232",
table_body.hlines.color = "#989898",
table_body.border.top.color = "#989898",
heading.border.bottom.color = "#989898",
row_group.border.top.color = "#989898",
row_group.border.bottom.style = "none",
stub.border.style = "dashed",
stub.border.color = "#989898",
stub.border.width = "1px",
summary_row.border.color = "#989898",
table.width = "60%"
) %>%
opt_all_caps()
library(tidyverse)
library(paletteer)
library(gt)
pizzaplace %>% mutate(type = case_when(
type == "chicken" ~ "chicken (pizzas with chicken as a major ingredient)",
type == "classic" ~ "classic (classical pizzas)",
type == "supreme" ~ "supreme (pizzas that try a little harder)",
type == "veggie" ~ "veggie (pizzas without any meats whatsoever)",
)) %>%
mutate(size = factor(size, levels = c("S", "M", "L", "XL", "XXL"))) %>%
dplyr::group_by(type, size) %>%
dplyr::summarize(
sold = n(),
income = sum(price)
) %>%
gt(rowname_col = "size") %>%
tab_header(title = md("&#127829; Pizzas Sold in 2015 &#127829;")) %>%
fmt_number(
columns = vars(sold),
decimals = 0,
use_seps = TRUE
) %>%
fmt_currency(
columns = vars(income),
currency = "USD"
) %>%
cols_align(align = "right", columns = TRUE) %>%
data_color(
columns = vars(sold, income),
colors = scales::col_numeric(
palette = paletteer::paletteer_d(
palette = "ggsci::red_material"
) %>% as.character(),
domain = NULL
),
alpha = 0.8
) %>%
summary_rows(
groups = TRUE,
columns = vars(sold),
fns = list(TOTAL = "sum"),
formatter = fmt_number,
decimals = 0,
use_seps = TRUE
) %>%
summary_rows(
groups = TRUE,
columns = vars(income),
fns = list(TOTAL = "sum"),
formatter = fmt_currency,
currency = "USD"
) %>%
grand_summary_rows(
columns = vars(sold),
fns = list(`GRAND TOTAL` = "sum"),
formatter = fmt_number,
decimals = 0,
use_seps = TRUE
) %>%
grand_summary_rows(
columns = vars(income),
fns = list(`GRAND TOTAL` = "sum"),
formatter = fmt_currency,
currency = "USD"
) %>%
tab_footnote(
footnote = "The pizza category with the highest total sales.",
locations = cells_row_groups("classic (classical pizzas)")
) %>%
tab_footnote(
footnote = md("Custom sizes for **The Greek** pizza."),
locations = cells_stub(c("XL", "XXL"))
) %>%
tab_footnote(
footnote = md("This is a new record. Truly, 2015 was a **great** year for the `pizzaplace`."),
locations = cells_grand_summary(columns = vars(sold))
) %>%
tab_options(
summary_row.background.color = "#ACEACE80",
grand_summary_row.background.color = "#990000",
row_group.background.color = "#FFEFDB80",
heading.background.color = "#EFFBFC",
column_labels.background.color = "#EFFBFC",
stub.background.color = "#EFFBFC",
table.font.color = "#323232",
table_body.hlines.color = "#989898",
table_body.border.top.color = "#989898",
heading.border.bottom.color = "#989898",
row_group.border.top.color = "#989898",
row_group.border.bottom.style = "none",
stub.border.style = "dashed",
stub.border.color = "#989898",
stub.border.width = "1px",
summary_row.border.color = "#989898",
table.width = "60%"
) %>%
opt_all_caps()
library(tidyverse)
library(paletteer)
library(gt)
pizzaplace %>% mutate(type = case_when(
type == "chicken" ~ "chicken (pizzas with chicken as a major ingredient)",
type == "classic" ~ "classic (classical pizzas)",
type == "supreme" ~ "supreme (pizzas that try a little harder)",
type == "veggie" ~ "veggie (pizzas without any meats whatsoever)",
)) %>%
mutate(size = factor(size, levels = c("S", "M", "L", "XL", "XXL"))) %>%
dplyr::group_by(type, size) %>%
dplyr::summarize(
sold = n(),
income = sum(price)
) %>%
gt(rowname_col = "size") %>%
tab_header(title = md("&#127829; Pizzas Sold in 2015 &#127829;")) %>%
fmt_number(
columns = vars(sold),
decimals = 0,
use_seps = TRUE
) %>%
fmt_currency(
columns = vars(income),
currency = "USD"
) %>%
cols_align(align = "right", columns = TRUE) %>%
data_color(
columns = vars(sold, income),
colors = scales::col_numeric(
palette = paletteer::paletteer_d(
palette = "ggsci::red_material"
) %>% as.character(),
domain = NULL
),
alpha = 0.8
) %>%
summary_rows(
groups = TRUE,
columns = vars(sold),
fns = list(TOTAL = "sum"),
formatter = fmt_number,
decimals = 0,
use_seps = TRUE
) %>%
summary_rows(
groups = TRUE,
columns = vars(income),
fns = list(TOTAL = "sum"),
formatter = fmt_currency,
currency = "USD"
) %>%
grand_summary_rows(
columns = vars(sold),
fns = list(`GRAND TOTAL` = "sum"),
formatter = fmt_number,
decimals = 0,
use_seps = TRUE
) %>%
grand_summary_rows(
columns = vars(income),
fns = list(`GRAND TOTAL` = "sum"),
formatter = fmt_currency,
currency = "USD"
) %>%
tab_footnote(
footnote = "The pizza category with the highest total sales.",
locations = cells_row_groups("classic (classical pizzas)")
) %>%
tab_footnote(
footnote = md("Custom sizes for **The Greek** pizza."),
locations = cells_stub(c("XL", "XXL"))
) %>%
tab_footnote(
footnote = md("This is a new record. Truly, 2015 was a **great** year for the `pizzaplace`."),
locations = cells_grand_summary(columns = vars(sold))
) %>%
tab_options(
summary_row.background.color = "#ACEACE80",
grand_summary_row.background.color = "#990000",
row_group.background.color = "#FFEFDB80",
heading.background.color = "#EFFBFC",
column_labels.background.color = "#EFFBFC",
stub.background.color = "#EFFBFC",
table.font.color = "#323232",
table_body.hlines.color = "#989898",
table_body.border.top.color = "#989898",
heading.border.bottom.color = "#989898",
row_group.border.top.color = "#989898",
row_group.border.bottom.style = "none",
stub.border.style = "dashed",
stub.border.color = "#989898",
stub.border.width = "1px",
summary_row.border.color = "#989898",
table.width = "60%"
) %>%
opt_all_caps()
mtcars[1:10, 1:6] %>%
mutate(name = rownames(.)) %>%
gt(rowname_col = "name") %>%
tab_stubhead(label = "Car name") %>%
tab_row_group(group = "Group 2", rows = 8:10) %>%
tab_row_group(group = "Group 1", rows = 4:7) %>%
tab_row_group(group = " ", rows = 1:3)
Sys.time()
Sys.Date()
#| fig-align: center
date: "`r Sys.Date()`"
date: "`r Sys.Date()`"
r Sys.Date()
Sys.Date()
#| fig-align: center
Sys.Date()
#| fig-align: center
Sys.time()
#| fig-align: center
knitr::include_url("https://romuanalyst.github.io/Programmation-R/posts/TP%20du%2014%20novembre%202022/")
#| fig-align: center
knitr::include_url("https://romuanalyst.github.io/Programmation-R/posts/TP%20du%2014%20novembre%202022/")
#| fig-align: center
knitr::include_url("https://romuanalyst.github.io/Programmation-R/posts/TP%20du%2014%20novembre%202022/")
#| fig-align: center
iris2 <- head(iris)
knitr::kable(iris2, col.names = gsub("[.]", " ", names(iris)))
#| fig-align: center
kable(head(starwars, 5), align = 'c', booktabs = TRUE) %>%
row_spec(1, bold = TRUE, italic = TRUE) %>%
row_spec(2:3, color = 'white', background = 'black') %>%
row_spec(4, underline = TRUE, monospace = TRUE) %>%
row_spec(5, angle = 45) %>%
column_spec(5, strikeout = TRUE)
#| fig-align: center
kable(head(starwars, 5), align = 'c', booktabs = TRUE) %>%
row_spec(1, bold = TRUE, italic = TRUE) %>%
row_spec(2:3, color = 'white', background = 'black') %>%
row_spec(4, underline = TRUE, monospace = TRUE) %>%
row_spec(5, angle = 45) %>%
column_spec(5, strikeout = TRUE)
#| fig-align: center
kable(head(iris, 5), align = 'c', booktabs = TRUE) %>%
row_spec(1, bold = TRUE, italic = TRUE) %>%
row_spec(2:3, color = 'white', background = 'black') %>%
row_spec(4, underline = TRUE, monospace = TRUE) %>%
row_spec(5, angle = 45) %>%
column_spec(5, strikeout = TRUE)
#| fig-align: center
library(dplyr)
kable(head(iris, 5), align = 'c', booktabs = TRUE) %>%
row_spec(1, bold = TRUE, italic = TRUE) %>%
row_spec(2:3, color = 'white', background = 'black') %>%
row_spec(4, underline = TRUE, monospace = TRUE) %>%
row_spec(5, angle = 45) %>%
column_spec(5, strikeout = TRUE)
#| fig-align: center
iris2 <- head(starwars)
knitr::kable(iris2, col.names = gsub("[.]", " ", names(starwars)))
#| fig-align: center
star2 <- head(starwars)
knitr::kable(star2, col.names = gsub("[.]", " ", names(starwars)))
#| fig-align: center
star2 <- head(starwars)
knitr::kable(star2, col.names = gsub("[.]", " ", names(starwars)))
#| fig-align: center
star2 <- head(starwars)
knitr::kable(star2, col.names = gsub("[.]", " ", names(starwars)))
install.packages("digitize")
library(digitize)
install.packages("digitize")
library(digitize)
install.packages("digitize")
install.packages("digitize")
library(digitize)
install.packages("digitize")
install.packages("digitize")
library(digitize)
install.packages("digitize")
install.packages("digitize")
library(digitize)
install.packages("digitize")
install.packages("digitize")
library(digitize)
install.packages("digitize")
install.packages("digitize")
library(digitize)
install.packages("digitize")
install.packages(c("bookdown", "broom", "broom.helpers", "bs4Dash", "bslib", "cli", "digest", "emmeans", "evaluate", "FactoMineR", "foreign", "formatR", "future", "gert", "ggiraph", "gtsummary", "highr", "htmltools", "htmlwidgets", "httpuv", "isoband", "jpeg", "jsonlite", "listenv", "maptools", "nlme", "officer", "openssl", "parallelly", "pkgdown", "png", "progressr", "purrr", "reactable", "rgeos", "rmarkdown", "roxygen2", "shiny", "skimr", "stringr", "terra", "testthat", "tidytext", "tinytex", "tm", "tokenizers", "topicmodels", "units", "whisker", "wk", "xfun", "XML", "yulab.utils"))
n <- (20 + 10)/5        # création de l'objet n et assignation
n             # appel de l'objet n pour affichage de sa valeur
n <- (20 + 10)/5        # création de l'objet n et assignation du résultat de l'opération
n             # appel de l'objet n pour affichage de sa valeur
#| column: margin
#| echo: fenced
knitr::kable(
mtcars[1:3, 1:3]
)
n <- (20 + 10)/5       # création de n et assignation du résultat de l'opération
n                      # appel de l'objet n pour affichage de sa valeur
#| column: margin
#| echo: true
n <- (20 + 10)/5       # création de n et assignation du résultat de l'opération
n                      # appel de l'objet n pour affichage de sa valeur
print('Hello world!')
n <- (20 + 10)/5       # création de n et assignation du résultat de l'opération
n                      # appel de l'objet n pour affichage de sa valeur
n <- (20 + 0)/5       # création de n et assignation du résultat de l'opération
n                      # appel de l'objet n pour affichage de sa valeur
library(shiny)
library(tidyverse)
ui <- fluidPage(
# Theme added here
theme = bslib::bs_theme(bootswatch = "superhero"),
titlePanel("Old Faithful Geyser Data"),
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
mainPanel(
plotOutput("distPlot")
)
)
)
server <- function(input, output) {
output$distPlot <- renderPlot({
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
}
shinyApp(ui = ui, server = server)
library(ggplot2)
library(ggpattern)
library(patchwork)
df <- data.frame(level = c("a", "b", "c", 'd'), outcome = c(2.3, 1.9, 3.2, 1))
stripes <- ggplot(df) +
geom_col_pattern(
aes(level, outcome, pattern_fill = level),
pattern = 'stripe',
fill    = 'white',
colour  = 'black'
) +
theme_bw(18) +
theme(legend.position = 'none')
install.packages("ggpattern")
library(ggpattern)
stripes <- ggplot(df) +
geom_col_pattern(
aes(level, outcome, pattern_fill = level),
pattern = 'stripe',
fill    = 'white',
colour  = 'black'
) +
theme_bw(18) +
theme(legend.position = 'none')
kittens <- ggplot(df) +
geom_col_pattern(
aes(level, outcome, fill = level),
pattern = 'placeholder',
pattern_type = 'kitten',
pattern_size = 3
) +
theme_bw(18) +
theme(legend.position = 'none')
stripes + kittens
View(kittens)
